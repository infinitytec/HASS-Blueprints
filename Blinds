blueprint:
  name: Blind Automation
  description: >
    Automates blinds to optimize solar heating and lighting. Opens blinds in cold weather to maximize solar heat gain. Closes blinds in hot weather to minimize heat ingress. Adjusts for sufficient natural lighting based on outdoor brightness.

  domain: automation

  input:
    outdoor_temperature:
      name: Outdoor Temperature
      description: Current outdoor temperature. Ideally measured locally but could also be from a weather data provider.
      selector:
        entity:
          filter:
            domain: sensor

    indoor_temperature:
      name: Indoor Temperature
      description: Current indoor temperature. Ideally in the same room as the blinds.
      selector:
        entity:
          filter:
            domain: sensor

    outdoor_illuminance:
      name: Outdoor Illuminance
      description: Outdoor brightness level. Ideally sourced from a local illuminance sensor.
      selector:
        entity:
          filter:
            domain: sensor
            device_class: illuminance

    blinds:
      name: Blinds
      description: The motorized blinds to be controlled by this automation.
      selector:
        entity:
          filter:
            domain: cover
          multiple: true

    openbrightness:
      name: Open Brightness Threshold
      description: The minimum brightness level required outside to automatically open the blinds.
      selector:
        number:
          min: 0
          max: 20000
          unit_of_measurement: lx
      default: 2500

    closebrightness:
      name: Close Brightness Threshold
      description: The maximum brightness level required outside to automatically close the blinds.
      selector:
        number:
          min: 0
          max: 20000
          unit_of_measurement: lx
      default: 1200

    timedelay:
      name: Time Delay
      description: How long the brightness must remain above or below the threshold before triggering the blinds. Increasing this value can reduce operation frequency to conserve battery life.
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: minutes
      default: 5


mode: single
max_exceeded: silent

triggers:
  - entity_id: !input outdoor_illuminance
    above: 2000
    for:
      minutes: 5
    trigger: numeric_state
  - entity_id: !input outdoor_illuminance
    below: 1500
    for:
      minutes: 5
    trigger: numeric_state
  - entity_id: !input outdoor_temperature
    below: !input indoor_temperature
    trigger: numeric_state
  - entity_id: !input outdoor_temperature
    above: !input indoor_temperature
    trigger: numeric_state
conditions: []
actions:
  - choose:
      - conditions:
          - condition: template
            value_template: >
              {% set diff = (states('!input outdoor_temperature')|float -
              states('!input indoor_temperature')|float)
              %} {{ diff | abs > 1.0 }}
          - condition: numeric_state
            entity_id: !input outdoor_temperature
            below: !input indoor_temperature
          - condition: numeric_state
            entity_id: !input outdoor_illuminance
            above: !input openbrightness
          - condition: state
            entity_id: !input blinds
            state: closed
        sequence:
          - target:
              entity_id: !input blinds
            action: cover.open_cover
            data: {}
      - conditions:
          - condition: template
            value_template: >
              {% set diff = (states('!input outdoor_temperature')|float -
              states('!input indoor_temperature')|float)
              %} {{ diff | abs > 1.0 }}
          - condition: numeric_state
            entity_id: !input outdoor_temperature
            above: !input indoor_temperature
          - condition: numeric_state
            entity_id: !input outdoor_illuminance
            above: !input openbrightness
          - condition: state
            entity_id: !input blinds
            state: open
        sequence:
          - target:
              entity_id: !input blinds
            action: cover.close_cover
            data: {}
      - conditions:
          - condition: template
            value_template: >
              {% set diff = (states('!input outdoor_temperature')|float -
              states('!input indoor_temperature')|float)
              %} {{ diff | abs > 1.0 }}
          - condition: numeric_state
            entity_id: !input outdoor_temperature
            below: !input indoor_temperature
          - condition: numeric_state
            entity_id: !input outdoor_illuminance
            below: !input closebrightness
          - condition: state
            entity_id: !input blinds
            state: open
        sequence:
          - target:
              entity_id: !input blinds
            action: cover.close_cover
            data: {}
      - conditions:
          - condition: template
            value_template: >
              {% set diff = (states('!input outdoor_temperature')|float -
              states('!input indoor_temperature')|float)
              %} {{ diff | abs > 1.0 }}
          - condition: numeric_state
            entity_id: !input outdoor_temperature
            above: !input indoor_temperature
          - condition: numeric_state
            entity_id: !input outdoor_illuminance
            below: !input closebrightness
          - condition: state
            entity_id: !input blinds
            state: closed
        sequence:
          - target:
              entity_id: !input blinds
            action: cover.open_cover
            data: {}
    default: []
