blueprint:
  name: Blind Automation
  description: >
    Automates blinds to optimize solar heating and lighting. Opens blinds in cold weather to maximize solar heat gain. Closes blinds in hot weather to minimize heat ingress. Adjusts for sufficient natural lighting based on outdoor brightness.

  domain: automation

  input:
    outdoor_temperature:
      name: Outdoor Temperature
      description: Current outdoor temperature. Ideally measured locally but could also be from a weather data provider.
      selector:
        entity:
          filter:
            domain: sensor

    indoor_temperature:
      name: Indoor Temperature
      description: Current indoor temperature. Ideally in the same room as the blinds.
      selector:
        entity:
          filter:
            domain: sensor

    outdoor_illuminance:
      name: Outdoor Illuminance
      description: Outdoor brightness level. Ideally sourced from a local illuminance sensor.
      selector:
        entity:
          filter:
            domain: sensor
            device_class: illuminance

    blinds:
      name: Blinds
      description: The motorized blinds to be controlled by this automation.
      selector:
        entity:
          filter:
            domain: cover
          multiple: true

mode: single
max_exceeded: silent

triggers:
  - entity_id: !input outdoor_illuminance
    above: 2000
    for:
      minutes: 5
    trigger: numeric_state
  - entity_id: !input outdoor_illuminance
    below: 1500
    for:
      minutes: 5
    trigger: numeric_state
  - entity_id: !input outdoor_temperature
    below: !input indoor_temperature
    trigger: numeric_state
  - entity_id: !input outdoor_temperatureblueprint:
  name: Blind Automation
  description: >
    Automates blinds to optimize solar heating and lighting. Opens blinds in cold weather to maximize solar heat gain. Closes blinds in hot weather to minimize heat ingress. Adjusts for sufficient natural lighting based on outdoor brightness.

  domain: automation

  input:
    outdoor_temperature:
      name: Outdoor Temperature
      description: Current outdoor temperature. Ideally measured locally but could also be from a weather data provider.
      selector:
        entity:
          filter:
            domain: sensor

    indoor_temperature:
      name: Indoor Temperature
      description: Current indoor temperature. Ideally in the same room as the blinds.
      selector:
        entity:
          filter:
            domain: sensor

    outdoor_illuminance:
      name: Outdoor Illuminance
      description: Outdoor brightness level. Ideally sourced from a local illuminance sensor.
      selector:
        entity:
          filter:
            domain: sensor
            device_class: illuminance

    blinds:
      name: Blinds
      description: The motorized blinds to be controlled by this automation.
      selector:
        entity:
          filter:
            domain: cover
          multiple: true

    illuminance_open_threshold:
      name: Illuminance Threshold to Open
      description: Illuminance level above which to open blinds.
      selector:
        number:
          min: 0
          max: 10000
          unit_of_measurement: lx

    illuminance_close_threshold:
      name: Illuminance Threshold to Close
      description: Illuminance level below which to close blinds.
      selector:
        number:
          min: 0
          max: 10000
          unit_of_measurement: lx

    temperature_open_threshold:
      name: Temperature Threshold to Openblueprint:  
  name: Blind Automation  
  description: >  
    Automates blinds to optimize solar heating and lighting. Opens blinds in cold weather to maximize solar heat gain. Closes blinds in hot weather to minimize heat ingress. Adjusts for sufficient natural lighting based on outdoor brightness.  
  
  domain: automation  
  
  input:  
    outdoor_temperature:  
      name: Outdoor Temperature  
      description: Current outdoor temperature. Ideally measured locally but could also be from a weather data provider.  
      selector:  
        entity:  
          filter:  
            domain: sensor  
  
    indoor_temperature:  
      name: Indoor Temperature  
      description: Current indoor temperature. Ideally in the same room as the blinds.  
      selector:  
        entity:  
          filter:  
            domain: sensor  
  
    outdoor_illuminance:  
      name: Outdoor Illuminance  
      description: Outdoor brightness level. Ideally sourced from a local illuminance sensor.  
      selector:  
        entity:  
          filter:  
            domain: sensor  
            device_class: illuminance  
  
    blinds:  
      name: Blinds  
      description: The motorized blinds to be controlled by this automation.  
      selector:  
        entity:  
          filter:  
            domain: cover  
          multiple: true  
  
    illuminance_open_threshold:  
      name: Illuminance Threshold to Open  
      description: Illuminance level above which to open blinds.  
      selector:  
        number:  
          min: 0  
          max: 10000  
          unit_of_measurement: lx  
  
    illuminance_close_threshold:  
      name: Illuminance Threshold to Close  
      description: Illuminance level below which to close blinds.  
      selector:  
        number:  
          min: 0  
          max: 10000  
          unit_of_measurement: lx  
  
    temperature_open_threshold:  
      name: Temperature Threshold to Open  
      description: Outdoor temperature below which to open blinds, in selected unit.  
      selector:  
        number:  
          min: -50  
          max: 50  
          unit_of_measurement: !input temperature_unit  
  
    temperature_unit:  
      name: Temperature Unit  
      description: Unit for temperature thresholds (Celsius or Fahrenheit).  
      selector:  
        select:  
          options:  
            - "°C"  
            - "°F"  
  
mode: single  
max_exceeded: silent  
  
triggers:  
  - entity_id: !input outdoor_temperature  
    below: !input temperature_open_threshold  
    trigger: numeric_state  
  - entity_id: !input outdoor_illuminance  
    above: !input illuminance_open_threshold  
    for:  
      minutes: 5  
    trigger: numeric_state  
  - entity_id: !input outdoor_illuminance  
    below: !input illuminance_close_threshold  
    for:  
      minutes: 5  
    trigger: numeric_state  
  - entity_id: !input outdoor_temperature  
    above: !input indoor_temperature  
    trigger: numeric_state  
conditions: []  
actions:  
  - choose:  
      - conditions:  
          - condition: template  
            value_template: >  
              {% set diff = (states('!input outdoor_temperature')|float -  
              states('!input indoor_temperature')|float)  
              %} {{ diff | abs > 1.0 }}  
          - condition: numeric_state  
            entity_id: !input outdoor_temperature  
            below: !input temperature_open_threshold  # Uses selected unit  
          - condition: numeric_state  
            entity_id: !input outdoor_illuminance  
            above: !input illuminance_open_threshold  
          - condition: state  
            entity_id: !input blinds  
            state: closed  
        sequence:  
          - target:  
              entity_id: !input blinds  
            action: cover.open_cover  
            data: {}  
      - conditions:  
          - condition: template  
            value_template: >  
              {% set diff = (states('!input outdoor_temperature')|float -  
              states('!input indoor_temperature')|float)  
              %} {{ diff | abs > 1.0 }}  
          - condition: numeric_state  
            entity_id: !input outdoor_temperature  
            above: !input indoor_temperature  
          - condition: numeric_state  
            entity_id: !input outdoor_illuminance  
            above: !input illuminance_open_threshold  
          - condition: state  
            entity_id: !input blinds  
            state: open  
        sequence:  
          - target:  
              entity_id: !input blinds  
            action: cover.close_cover  
            data: {}  
      - conditions:  
          - condition: template  
            value_template: >  
              {% set diff = (states('!input outdoor_temperature')|float -  
              states('!input indoor_temperature')|float)  
              %} {{ diff | abs > 1.0 }}  
          - condition: numeric_state  
            entity_id: !input outdoor_temperature  
            below: !input temperature_open_threshold  # Uses selected unit  
          - condition: numeric_state  
            entity_id: !input outdoor_illuminance  
            below: !input illuminance_close_threshold  
          - condition: state  
            entity_id: !input blinds  
            state: open  
        sequence:  
          - target:  
              entity_id: !input blinds  
            action: cover.close_cover  
            data: {}  
      - conditions:  
          - condition: template  
            value_template: >  
              {% set diff = (states('!input outdoor_temperature')|float -  
              states('!input indoor_temperature')|float)  
              %} {{ diff | abs > 1.0 }}  
          - condition: numeric_state  
            entity_id: !input outdoor_temperature  
            above: !input indoor_temperature  
          - condition: numeric_state  
            entity_id: !input outdoor_illuminance  
            below: !input illuminance_close_threshold  
          - condition: state  
            entity_id: !input blinds  
            state: closed  
        sequence:  
          - target:  
              entity_id: !input blinds  
            action: cover.open_cover  
            data: {}  
    default: []
      description: Outdoor temperature below which to open blinds.
      selector:
        number:
          min: -50
          max: 50
          unit_of_measurement: °C

mode: single
max_exceeded: silent

triggers:
  - entity_id: !input outdoor_temperature
    below: !input temperature_open_threshold
    trigger: numeric_state
  - entity_id: !input outdoor_illuminance
    above: !input illuminance_open_threshold
    for:
      minutes: 5
    trigger: numeric_state
  - entity_id: !input outdoor_illuminance
    below: !input illuminance_close_threshold
    for:
      minutes: 5
    trigger: numeric_state
  - entity_id: !input outdoor_temperature
    above: !input indoor_temperature
    trigger: numeric_state
conditions: []
actions:
  - choose:
      - conditions:
          - condition: template
            value_template: >
              {% set diff = (states('!input outdoor_temperature')|float -
              states('!input indoor_temperature')|float)
              %} {{ diff | abs > 1.0 }}
          - condition: numeric_state
            entity_id: !input outdoor_temperature
            below: !input temperature_open_threshold  # Updated to use new input
          - condition: numeric_state
            entity_id: !input outdoor_illuminance
            above: !input illuminance_open_threshold
          - condition: state
            entity_id: !input blinds
            state: closed
        sequence:
          - target:
              entity_id: !input blinds
            action: cover.open_cover
            data: {}
      - conditions:
          - condition: template
            value_template: >
              {% set diff = (states('!input outdoor_temperature')|float -
              states('!input indoor_temperature')|float)
              %} {{ diff | abs > 1.0 }}
          - condition: numeric_state
            entity_id: !input outdoor_temperature
            above: !input indoor_temperature
          - condition: numeric_state
            entity_id: !input outdoor_illuminance
            above: !input illuminance_open_threshold
          - condition: state
            entity_id: !input blinds
            state: open
        sequence:
          - target:
              entity_id: !input blinds
            action: cover.close_cover
            data: {}
      - conditions:
          - condition: template
            value_template: >
              {% set diff = (states('!input outdoor_temperature')|float -
              states('!input indoor_temperature')|float)
              %} {{ diff | abs > 1.0 }}
          - condition: numeric_state
            entity_id: !input outdoor_temperature
            below: !input temperature_open_threshold  # Updated to use new input
          - condition: numeric_state
            entity_id: !input outdoor_illuminance
            below: !input illuminance_close_threshold
          - condition: state
            entity_id: !input blinds
            state: open
        sequence:
          - target:
              entity_id: !input blinds
            action: cover.close_cover
            data: {}
      - conditions:
          - condition: template
            value_template: >
              {% set diff = (states('!input outdoor_temperature')|float -
              states('!input indoor_temperature')|float)
              %} {{ diff | abs > 1.0 }}
          - condition: numeric_state
            entity_id: !input outdoor_temperature
            above: !input indoor_temperature
          - condition: numeric_state
            entity_id: !input outdoor_illuminance
            below: !input illuminance_close_threshold
          - condition: state
            entity_id: !input blinds
            state: closed
        sequence:
          - target:
              entity_id: !input blinds
            action: cover.open_cover
            data: {}
    default: []
    above: !input indoor_temperature
    trigger: numeric_state
conditions: []
actions:
  - choose:
      - conditions:
          - condition: template
            value_template: >
              {% set diff = (states('!input outdoor_temperature')|float -
              states('!input indoor_temperature')|float)
              %} {{ diff | abs > 1.0 }}
          - condition: numeric_state
            entity_id: !input outdoor_temperature
            below: !input indoor_temperature
          - condition: numeric_state
            entity_id: !input outdoor_illuminance
            above: 2000
          - condition: state
            entity_id: !input blinds
            state: closed
        sequence:
          - target:
              entity_id: !input blinds
            action: cover.open_cover
            data: {}
      - conditions:
          - condition: template
            value_template: >
              {% set diff = (states('!input outdoor_temperature')|float -
              states('!input indoor_temperature')|float)
              %} {{ diff | abs > 1.0 }}
          - condition: numeric_state
            entity_id: !input outdoor_temperature
            above: !input indoor_temperature
          - condition: numeric_state
            entity_id: !input outdoor_illuminance
            above: 2000
          - condition: state
            entity_id: !input blinds
            state: open
        sequence:
          - target:
              entity_id: !input blinds
            action: cover.close_cover
            data: {}
      - conditions:
          - condition: template
            value_template: >
              {% set diff = (states('!input outdoor_temperature')|float -
              states('!input indoor_temperature')|float)
              %} {{ diff | abs > 1.0 }}
          - condition: numeric_state
            entity_id: !input outdoor_temperature
            below: !input indoor_temperature
          - condition: numeric_state
            entity_id: !input outdoor_illuminance
            below: 1500
          - condition: state
            entity_id: !input blinds
            state: open
        sequence:
          - target:
              entity_id: !input blinds
            action: cover.close_cover
            data: {}
      - conditions:
          - condition: template
            value_template: >
              {% set diff = (states('!input outdoor_temperature')|float -
              states('!input indoor_temperature')|float)
              %} {{ diff | abs > 1.0 }}
          - condition: numeric_state
            entity_id: !input outdoor_temperature
            above: !input indoor_temperature
          - condition: numeric_state
            entity_id: !input outdoor_illuminance
            below: 1500
          - condition: state
            entity_id: !input blinds
            state: closed
        sequence:
          - target:
              entity_id: !input blinds
            action: cover.open_cover
            data: {}
    default: []
